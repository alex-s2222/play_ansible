services:
    mainbot:
      build: 
        context: mainBot
        dockerfile: Dockerfile
        
      container_name: mainBot
      command: python run_app.py
      depends_on:
        - mongodb

      environment:
        MONGO_HOST: mongodb
        MONGO_PORT: 27017
        MONGO_USER: {{ var.MONGO_USER }}
        MONGO_PASSWORD: {{ var.MONGO_PASS }} 
        
        USER_ID: {{ var.USER_ID }}
        TOKEN: {{ var.TG_TOKEN }}


    sendmsgbot:
      build: 
        context: sendMsgBot
        dockerfile: Dockerfile

      container_name: sendMsgBot
      command: python run_app.py
      depends_on:
        - mongodb
      
      environment:
        MONGO_HOST: mongodb
        MONGO_PORT: 27017
        MONGO_USER: {{ var.MONGO_USER }}
        MONGO_PASSWORD: {{ var.MONGO_PASS }} 

        TOKEN: {{ var.TG_TOKEN_2 }}


    mongodb:
      image: mongo:4.2
      container_name: database
      restart: unless-stopped
      command: mongod --auth
      
      environment:
        MONGODB_DATA_DIR: /data/db
        MONDODB_LOG_DIR: /dev/null
        MONGO_INITDB_ROOT_USERNAME: {{ var.MONGO_USER }}
        MONGO_INITDB_ROOT_PASSWORD: {{ var.MONGO_PASS }} 

      ports:
        - 27017:27017 

      volumes:
        - mongodb_data_cont:/data/db

volumes:
  mongodb_data_cont: